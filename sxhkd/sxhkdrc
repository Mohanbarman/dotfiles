# Start timer 
alt + t
  /home/mohan/MyScripts/timer

# Stop timer
alt + r
  killall timer; \
  kill -CONT $(pidof timer); \
  polybar-msg -p $(pidof polybar) hook timer 2

# Pause and resume timer
alt + space
  toogle-timer $(pidof timer)

# Check network until internet connection gets back
super + n
  check-network

# Applications
super + Return
	urxvt

super + w
  webstorm

super + b
	brave

super + p
  notify-send 'Pick a color.';\
  xcolor | xsel -b

super + e
  emoji-picker

super + space
  rofi -show drun

alt + c
  code


# make sxhkd reload its configuration files:
super + ctrl + shift + s
  notify-send 'Reloading sxhkd configuration.';\
  pkill -USR1 -x sxhkd

# reload compton
super + shift + ctrl + c
  notify-send 'Reloading compton.';\
  killall compton; compton&

# reload polybar
super + shift + ctrl + p
  notify-send 'Reloading polybar.';\
  killall polybar ; polybar mybar &

# reload notification system
super + shift + ctrl + d
  notify-send 'Reloading notification system.';\
  killall dunst; dunst &

# reload xresources
super + shift + ctrl + x
  notify-send 'Reloading xresources';\
  xrdb /home/mohan/.Xresources

#
# bspwm hotkeys
#

# hide current window
super + shift + comma
    stack_file="$XDG_RUNTIME_DIR/bspwm_hidden_nodes.txt"; \
    target_node=$(bspc query -N -n focused);              \
    echo "$target_node" >>  "$stack_file";                \
    bspc node "$target_node" --flag hidden=on

# unhide the most recently hidden window
super + shift + period
    stack_file="$XDG_RUNTIME_DIR/bspwm_hidden_nodes.txt"; \
    target_node=$(tail --lines=1 "$stack_file");          \
    sed -i '$d' "$stack_file";                            \
    bspc node "$target_node" --to-desktop focused;        \
    bspc node "$target_node" --flag hidden=off

# quit/restart bspwm
super + ctrl + shift + {q,b}
	notify-send 'Restarting bspwm.';\
	bspc {quit,wm -r}

# close and kill
super + shift + q
	bspc node -c

# alternate between the tiled and monocle layout
super + shift + m
	bspc desktop -l next


#
# state/flags
#

# set the window state
super + shift + {t,f,p}
	bspc node -t {tiled,floating,pseudo_tiled}

#
# focus/swap
#

# focus the node in the given direction
super + {h,j,k,l}
	bspc node --focus {west,south,north,east}

# focus the next/previous node in the current desktop
super + alt + {j,k}
	bspc node -f {next,prev}.local

alt + Tab
	bspc node -f next.local

# focus the next/previous desktop in the current monitor
super + alt + {h,l}
	bspc desktop -f {prev,next}.local

# focus to the given desktop
super + {1-9}
	bspc desktop -f '^{1-9,9}'

super + 0
  bspc desktop -f 10

# preselect the direction
alt + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# cancel the preselection for the focused node
alt + ctrl + space
	bspc node -p cancel

####################
# System shortcuts #
####################

# Change window gap
ctrl + shift + {j,k}
    bspc config window_gap $((`bspc config window_gap` {+,-} 10 ))

# expand a window by moving one of its side outward
super + shift + {h,j,k,l}
	bspc node -z {left -10 0,bottom 0 10,top 0 -10,right 20 0}

# contract a window by moving one of its side inward
shift + alt + {h,j,k,l}
	bspc node -z {right -10 0,top 0 10,bottom 0 -10,left 10 0}

# move a floating window
super + ctrl + {h,j,k,l}
	bspc node -v {-10 0,0 10,0 -10,10 0}

# rotate desktop
super + r
	bspc node @/ --rotate {90,-90}

# Circulate the leaves of the tree
super + {_,shift + }c
	bspc node @/ --circulate {backward,forward}

# Toogle pseudo tiling of window
super + shift + p
	bspc node --state \~pseudo_tiled

# Toggle fullscreen of window
super + f
	bspc node --state \~fullscreen

# move focued widow to diffrent workspace
super + shift + {1-9}
    id=$(bspc query -N -n); bspc node -d ^{1-9}

super + shift + 0
    id=$(bspc query -N -n); bspc node -d 10

# Restart wifi 
super + alt + space 
	notify-send 'Restarting wifi interface..  *_*';\
	nmcli radio wifi off ; nmcli radio wifi on

# Increase volume
XF86AudioRaiseVolume
	ponymix increase 5

# Decrease volume
XF86AudioLowerVolume
	ponymix decrease 5

# Toggle mute
alt + m
	ponymix toggle

# Brightness
XF86MonBrightnessDown
	light -U 2; \
  polybar-msg -p $(pidof polybar) hook brightness 1

XF86MonBrightnessUp
	light -A 2; \
  polybar-msg -p $(pidof polybar) hook brightness 1
 
# screenshot
Print 
	scrot '%Y-%m-%d-%k%M%S-scrot.png' -e 'mv $f ~/Screenshots/'

# screenshot a specific part
super + s
  capture

ctrl + alt + d
  xrandr --output eDP --brightness 1
